
timestamp="2025-05-20 09:53:54.660740+00:00" command_alias="test" full_command="cd backend && npm test || true && cd ../frontend && npm test" command_result="exit code: 127
stdout: 
> amazonq-dashboard-backend@1.0.0 test
> echo "Error: no test specified" && exit 1

Error: no test specified

> amazonq-dashboard@0.1.0 test
> react-scripts test


stderr: sh: line 1: react-scripts: command not found
"
timestamp="2025-05-20 09:54:52.270192+00:00" command_alias="install" full_command="cd backend && npm install && cd ../frontend && npm install" command_result="exit code: 0
stdout: 
added 133 packages, and audited 134 packages in 4s

33 packages are looking for funding
  run `npm fund` for details

3 high severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.

added 1486 packages, and audited 1487 packages in 40s

275 packages are looking for funding
  run `npm fund` for details

8 vulnerabilities (2 moderate, 6 high)

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.

stderr: npm warn deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.
npm warn deprecated rollup-plugin-terser@7.0.2: This package has been deprecated and is no longer maintained. Please use @rollup/plugin-terser
npm warn deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead
npm warn deprecated stable@0.1.8: Modern JS already guarantees Array#sort() is a stable sort, so this library is deprecated. See the compatibility table on MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#browser_compatibility
npm warn deprecated workbox-cacheable-response@6.6.0: workbox-background-sync@6.6.0
npm warn deprecated q@1.5.1: You or someone you depend on is using Q, the JavaScript Promise library that gave JavaScript developers strong feelings about promises. They can almost certainly migrate to the native JavaScript promise now. Thank you literally everyone for joining me in this bet against the odds. Be excellent to each other.
npm warn deprecated
npm warn deprecated (For a CapTP with native promises, see @endo/eventual-send and @endo/captp)
npm warn deprecated workbox-google-analytics@6.6.0: It is not compatible with newer versions of GA starting with v4, as long as you are using GAv3 it should be ok, but the package is not longer being maintained
npm warn deprecated w3c-hr-time@1.0.2: Use your platform's native performance.now() and performance.timeOrigin.
npm warn deprecated domexception@2.0.1: Use your platform's native DOMException instead
npm warn deprecated abab@2.0.6: Use your platform's native atob() and btoa() methods instead
npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
npm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
npm warn deprecated @humanwhocodes/object-schema@2.0.3: Use @eslint/object-schema instead
npm warn deprecated @humanwhocodes/config-array@0.13.0: Use @eslint/config-array instead
npm warn deprecated @babel/plugin-proposal-private-methods@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-private-methods instead.
npm warn deprecated @babel/plugin-proposal-optional-chaining@7.21.0: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-optional-chaining instead.
npm warn deprecated @babel/plugin-proposal-numeric-separator@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-numeric-separator instead.
npm warn deprecated @babel/plugin-proposal-nullish-coalescing-operator@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-nullish-coalescing-operator instead.
npm warn deprecated @babel/plugin-proposal-class-properties@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-class-properties instead.
npm warn deprecated @babel/plugin-proposal-private-property-in-object@7.21.11: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-private-property-in-object instead.
npm warn deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.
npm warn deprecated eslint@8.57.1: This version is no longer supported. Please see https://eslint.org/version-support for other options.
"
timestamp="2025-05-20 09:55:07.777335+00:00" command_alias="test" full_command="cd backend && npm test || true && cd ../frontend && npm test" command_result="exit code: 1
stdout: 
> amazonq-dashboard-backend@1.0.0 test
> echo "Error: no test specified" && exit 1

Error: no test specified

> amazonq-dashboard@0.1.0 test
> react-scripts test


stderr: FAIL src/services/api.test.js
  ‚óè Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     ‚Ä¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     ‚Ä¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     ‚Ä¢ To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     ‚Ä¢ If you need a custom transformation specify a "transform" option in your config.
     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /workspace/frontend/node_modules/axios/index.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){import axios from './lib/axios.js';
                                                                                      ^^^^^^

    SyntaxError: Cannot use import statement outside a module

    [0m[31m[1m>[22m[39m[90m 1 |[39m [36mimport[39m axios [36mfrom[39m [32m'axios'[39m[33m;[39m
     [90m   |[39m [31m[1m^[22m[39m
     [90m 2 |[39m [36mimport[39m { 
     [90m 3 |[39m   getUsers[33m,[39m 
     [90m 4 |[39m   getActivityLogs[33m,[39m [0m

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1728:14)
      at Object.<anonymous> (src/services/api.test.js:1:1)

PASS src/components/AcceptanceRateChart.test.js
  ‚óè Console

    console.error
      Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

    [0m [90m 39 |[39m     getAcceptanceRateTrends[33m.[39mmockImplementation(() [33m=>[39m [36mnew[39m [33mPromise[39m(() [33m=>[39m {}))[33m;[39m [90m// Never resolves[39m
     [90m 40 |[39m     
    [31m[1m>[22m[39m[90m 41 |[39m     render([33m<[39m[33mAcceptanceRateChart[39m filters[33m=[39m{mockFilters} [33m/[39m[33m>[39m)[33m;[39m
     [90m    |[39m           [31m[1m^[22m[39m
     [90m 42 |[39m     
     [90m 43 |[39m     expect(screen[33m.[39mgetByText([32m'Acceptance Rate Trends'[39m))[33m.[39mtoBeInTheDocument()[33m;[39m
     [90m 44 |[39m     expect(screen[33m.[39mgetByRole([32m'combobox'[39m))[33m.[39mtoHaveValue([32m'daily'[39m)[33m;[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/AcceptanceRateChart.test.js:41:11)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 21 |[39m           compareWithPrevious
     [90m 22 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 23 |[39m         setChartData(data)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 24 |[39m       } [36mcatch[39m (err) {
     [90m 25 |[39m         setError([32m'Failed to fetch acceptance rate trends'[39m)[33m;[39m
     [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setChartData (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:23:9)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m
     [90m 27 |[39m       } [36mfinally[39m {
    [31m[1m>[22m[39m[90m 28 |[39m         setLoading([36mfalse[39m)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 29 |[39m       }
     [90m 30 |[39m     }[33m;[39m
     [90m 31 |[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:28:9)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 21 |[39m           compareWithPrevious
     [90m 22 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 23 |[39m         setChartData(data)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 24 |[39m       } [36mcatch[39m (err) {
     [90m 25 |[39m         setError([32m'Failed to fetch acceptance rate trends'[39m)[33m;[39m
     [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setChartData (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:23:9)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m
     [90m 27 |[39m       } [36mfinally[39m {
    [31m[1m>[22m[39m[90m 28 |[39m         setLoading([36mfalse[39m)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 29 |[39m       }
     [90m 30 |[39m     }[33m;[39m
     [90m 31 |[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:28:9)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 21 |[39m           compareWithPrevious
     [90m 22 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 23 |[39m         setChartData(data)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 24 |[39m       } [36mcatch[39m (err) {
     [90m 25 |[39m         setError([32m'Failed to fetch acceptance rate trends'[39m)[33m;[39m
     [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setChartData (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:23:9)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m
     [90m 27 |[39m       } [36mfinally[39m {
    [31m[1m>[22m[39m[90m 28 |[39m         setLoading([36mfalse[39m)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 29 |[39m       }
     [90m 30 |[39m     }[33m;[39m
     [90m 31 |[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:28:9)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 21 |[39m           compareWithPrevious
     [90m 22 |[39m         })[33m;[39m
    [31m[1m>[22m[39m[90m 23 |[39m         setChartData(data)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 24 |[39m       } [36mcatch[39m (err) {
     [90m 25 |[39m         setError([32m'Failed to fetch acceptance rate trends'[39m)[33m;[39m
     [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setChartData (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:23:9)

    console.error
      Warning: An update to AcceptanceRateChart inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at AcceptanceRateChart (/workspace/frontend/src/components/AcceptanceRateChart.js:6:32)

    [0m [90m 26 |[39m         console[33m.[39merror(err)[33m;[39m
     [90m 27 |[39m       } [36mfinally[39m {
    [31m[1m>[22m[39m[90m 28 |[39m         setLoading([36mfalse[39m)[33m;[39m
     [90m    |[39m         [31m[1m^[22m[39m
     [90m 29 |[39m       }
     [90m 30 |[39m     }[33m;[39m
     [90m 31 |[39m[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at fetchData (src/components/AcceptanceRateChart.js:28:9)

    console.error
      Error: API Error
          at Object.<anonymous> (/workspace/frontend/src/components/AcceptanceRateChart.test.js:99:47)
          at Promise.then.completed (/workspace/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/run.js:218:40)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/workspace/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

    [0m [90m 24 |[39m       } [36mcatch[39m (err) {
     [90m 25 |[39m         setError([32m'Failed to fetch acceptance rate trends'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 26 |[39m         console[33m.[39merror(err)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 27 |[39m       } [36mfinally[39m {
     [90m 28 |[39m         setLoading([36mfalse[39m)[33m;[39m
     [90m 29 |[39m       }[0m

      at fetchData (src/components/AcceptanceRateChart.js:26:17)


Test Suites: 1 failed, 1 passed, 2 total
Tests:       6 passed, 6 total
Snapshots:   0 total
Time:        2.224 s
Ran all test suites.
"
timestamp="2025-05-20 09:55:38.885300+00:00" command_alias="build" full_command="cd frontend && npm run build" command_result="exit code: 1
stdout: 
> amazonq-dashboard@0.1.0 build
> react-scripts build

Creating an optimized production build...

Treating warnings as errors because process.env.CI = true.
Most CI servers set it automatically.

Failed to compile.

[eslint] 
src/components/PromptLogs.js
  Line 57:6:  React Hook useEffect has a missing dependency: 'pagination'. Either include it or remove the dependency array. You can also do a functional update 'setPagination(p => ...)' if you only need 'pagination' in the 'setPagination' call  react-hooks/exhaustive-deps



stderr: "
timestamp="2025-05-20 09:56:42.724350+00:00" command_alias="build" full_command="cd frontend && npm run build" command_result="exit code: 0
stdout: 
> amazonq-dashboard@0.1.0 build
> react-scripts build

Creating an optimized production build...
Compiled successfully.

File sizes after gzip:

  206.7 kB (+4 B)  build/static/js/main.051808cc.js
  6.74 kB          build/static/css/main.50da11f4.css
  1.78 kB          build/static/js/453.5147d328.chunk.js

The project was built assuming it is hosted at /.
You can control this with the homepage field in your package.json.

The build folder is ready to be deployed.
You may serve it with a static server:

  npm install -g serve
  serve -s build

Find out more about deployment here:

  https://cra.link/deployment


stderr: "